{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/utils/AlertMessage.tsx\";\nimport React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\n// アラートメッセージ（何かアクションを行なった際の案内用に使い回す）\nconst AlertMessage = ({\n  open,\n  setOpen,\n  severity,\n  message\n}) => {\n  const handleCloseAlertMessage = (e, reason) => {\n    if (reason === \"clickaway\") return;\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 6000,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      onClose: handleCloseAlertMessage,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseAlertMessage,\n        severity: severity,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = AlertMessage;\nexport default AlertMessage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"AlertMessage\");","map":{"version":3,"sources":["/usr/src/app/src/components/utils/AlertMessage.tsx"],"names":["React","Snackbar","MuiAlert","Alert","forwardRef","props","ref","AlertMessage","open","setOpen","severity","message","handleCloseAlertMessage","e","reason","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqC,wBAArC;;;AAEA,MAAMC,KAAK,gBAAGH,KAAK,CAACI,UAAN,MAA6C,SAASD,KAAT,CACzDE,KADyD,EAEzDC,GAFyD,EAGzD;AACA,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC,QAA1C;AAAA,OAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALa,CAAd;MAAMF,K;;AAcN;AACA,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAA6D;AAChF,QAAMC,uBAAuB,GAAG,CAACC,CAAD,EAA2BC,MAA3B,KAA+C;AAC7E,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAE5BL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAED,IADR;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,YAAY,EAAE;AAAEO,QAAAA,QAAQ,EAAE,KAAZ;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAHhB;AAIE,MAAA,OAAO,EAAEJ,uBAJX;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,uBAAhB;AAAyC,QAAA,QAAQ,EAAEF,QAAnD;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CArBD;;MAAMJ,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React from \"react\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\"\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref,\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\n})\n\ninterface AlertMessageProps {\n  open: boolean\n  setOpen: Function\n  severity: \"error\" | \"success\" | \"info\" | \"warning\"\n  message: string\n}\n\n// アラートメッセージ（何かアクションを行なった際の案内用に使い回す）\nconst AlertMessage = ({ open, setOpen, severity, message }: AlertMessageProps) => {\n  const handleCloseAlertMessage = (e?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") return\n\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={handleCloseAlertMessage}\n      >\n        <Alert onClose={handleCloseAlertMessage} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n\nexport default AlertMessage\n"]},"metadata":{},"sourceType":"module"}