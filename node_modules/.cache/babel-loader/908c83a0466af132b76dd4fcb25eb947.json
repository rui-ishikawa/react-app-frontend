{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/post/PostItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"App\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UserModal from \"./UserModal\";\nimport { deletePost, getPosts } from \"../../lib/api/posts\";\nimport PostComment from \"./PostComment\"; // import userEvent from \"@testing-library/user-event\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: 480,\n    marginTop: \"2rem\",\n    transition: \"all 0.3s\",\n    \"&:hover\": {\n      boxShadow: \"1px 0px 20px -1px rgba(0,0,0,0.2), 0px 0px 20px 5px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n      transform: \"translateY(-3px)\"\n    }\n  },\n  delete: {\n    marginLeft: \"auto\"\n  },\n  avatar: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  }\n}));\n\nconst PostItem = ({\n  post,\n  handleGetPosts\n}) => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const classes = useStyles();\n  const [like, setLike] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  const handleDeletePost = async id => {\n    await deletePost(id).then(() => {\n      handleGetPosts();\n    });\n  }; // const handleGetUserPost = async () => {\n  //   const { data } = await getPosts()\n  //   setPosts(data.posts)\n  // }\n\n\n  const handlePostCreateUser = async () => {\n    try {\n      const res = await getPosts();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setPosts(res === null || res === void 0 ? void 0 : res.data.posts);\n      } else {\n        console.log(\"No users\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts === null || posts === void 0 ? void 0 : posts.map(post => {\n      var _post$image, _post$content;\n\n      return /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"avatar\",\n            src: currentUser === null || currentUser === void 0 ? void 0 : currentUser.image.url //userに紐付けたい\n            ,\n            className: classes.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this),\n          title: post === null || post === void 0 ? void 0 : post.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), ((_post$image = post.image) === null || _post$image === void 0 ? void 0 : _post$image.url) ? /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          src: post.image.url,\n          alt: \"post image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"span\",\n            children: (_post$content = post.content) === null || _post$content === void 0 ? void 0 : _post$content.split(\"\\n\").map((content, index) => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          disableSpacing: true,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => like ? setLike(false) : setLike(true),\n            children: like ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UserModal // ここにpropsを渡して、ポストに紐づいたuserを表示させる\n          , {\n            handlePostCreateUser: handlePostCreateUser,\n            user: post.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PostComment, {}, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.delete,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleDeletePost(post.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(PostItem, \"oLe0RCHU0YWWY8COJ7dkDqy7qvo=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostItem;\nexport default PostItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/usr/src/app/src/components/post/PostItem.tsx"],"names":["React","useContext","useState","AuthContext","makeStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","FavoriteBorderIcon","FavoriteIcon","DeleteIcon","UserModal","deletePost","getPosts","PostComment","useStyles","theme","card","width","marginTop","transition","boxShadow","transform","delete","marginLeft","avatar","spacing","height","PostItem","post","handleGetPosts","currentUser","classes","like","setLike","posts","setPosts","handleDeletePost","id","then","handlePostCreateUser","res","console","log","status","data","err","map","image","url","name","content","split","index","user"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\"\nimport { AuthContext } from \"App\"\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Typography from \"@material-ui/core/Typography\"\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\n\nimport UserModal from \"./UserModal\"\nimport { Post } from \"../../interfaces/index\"\nimport { deletePost, getPosts } from \"../../lib/api/posts\"\nimport PostComment from \"./PostComment\"\n// import userEvent from \"@testing-library/user-event\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    width: 480,\n    marginTop: \"2rem\",\n    transition: \"all 0.3s\",\n    \"&:hover\": {\n      boxShadow:\n        \"1px 0px 20px -1px rgba(0,0,0,0.2), 0px 0px 20px 5px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n      transform: \"translateY(-3px)\"\n    }\n  },\n  delete: {\n    marginLeft: \"auto\"\n  },\n  avatar: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  }\n}))\n\ninterface PostItemProps {\n  post: Post\n  handleGetPosts: Function\n}\n\n\nconst PostItem = ({ post, handleGetPosts }: PostItemProps) => {\n  const { currentUser } = useContext(AuthContext)\n  const classes = useStyles()\n  const [like, setLike] = useState<boolean>(false)\n  const [posts, setPosts] = useState<Post[]>([])\n\n  const handleDeletePost = async (id: string) => {\n    await deletePost(id)\n      .then(() => {\n        handleGetPosts()\n      })\n  }\n\n  // const handleGetUserPost = async () => {\n  //   const { data } = await getPosts()\n\n  //   setPosts(data.posts)\n  // }\n  const handlePostCreateUser = async () => {\n    try {\n      const res = await getPosts()\n      console.log(res)\n\n      if (res?.status === 200) {\n        setPosts(res?.data.posts)\n      } else {\n        console.log(\"No users\")\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <>\n      {\n        posts?.map((post: Post) => {\n          return (\n            <Card className={classes.card}>\n              <CardHeader\n                avatar={\n                  <Avatar\n                    alt=\"avatar\"\n                    src={currentUser?.image.url} //userに紐付けたい\n                    className={classes.avatar}\n                  />\n                }\n                title={post?.name}\n              />\n              {post.image?.url ?\n                <CardMedia\n                  component=\"img\"\n                  src={post.image.url}\n                  alt=\"post image\"\n                /> : null\n              }\n              <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n                  {post.content?.split(\"\\n\").map((content: string, index: number) => {\n                    return (\n                      <p key={index}>{content}</p>\n                    )\n                  })\n                  }\n                </Typography>\n              </CardContent>\n\n              <CardActions disableSpacing>\n                <IconButton onClick={() => like ? setLike(false) : setLike(true)}>\n                  {like ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                </IconButton>\n                <UserModal\n                  // ここにpropsを渡して、ポストに紐づいたuserを表示させる\n                  handlePostCreateUser={handlePostCreateUser}\n                  user={post.user}\n                />\n\n              </CardActions>\n              <PostComment\n                key={post.id}\n              />\n              <div className={classes.delete}>\n                <IconButton\n                  onClick={() => handleDeletePost(post.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </div>\n\n            </Card>\n          )\n        })\n      }\n    </>\n  )\n}\n\nexport default PostItem\n"]},"metadata":{},"sourceType":"module"}