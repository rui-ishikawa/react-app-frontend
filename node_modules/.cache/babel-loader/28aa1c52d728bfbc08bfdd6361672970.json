{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/post/PostModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport PostForm from './PostForm';\nimport { getPosts } from \"../../lib/api/posts\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => createStyles({\n  paper: {\n    position: 'absolute',\n    width: 480,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(6, 8, 7)\n  }\n}));\nexport default function PostModal() {\n  _s();\n\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [posts, setPosts] = useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleGetPosts = async () => {\n    const {\n      data\n    } = await getPosts();\n    setPosts(data.posts);\n  };\n\n  useEffect(() => {\n    handleGetPosts();\n  }, []);\n\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      handleGetPosts: handleGetPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      variant: \"outlined\",\n      color: \"primary\",\n      children: \"\\u4F5C\\u6210\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostModal, \"Z/5xTRtEb0TVBg/nSVKOJ6n3o30=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostModal\");","map":{"version":3,"sources":["/usr/src/app/src/components/post/PostModal.tsx"],"names":["React","useEffect","useState","makeStyles","createStyles","Modal","PostForm","getPosts","Button","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","PostModal","classes","modalStyle","open","setOpen","posts","setPosts","handleOpen","handleClose","handleGetPosts","data","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport PostForm from './PostForm';\nimport { getPosts } from \"../../lib/api/posts\"\nimport { Post } from \"../../interfaces/index\"\nimport Button from \"@material-ui/core/Button\"\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      position: 'absolute',\n      width: 480,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(6, 8, 7),\n    },\n  }),\n);\n\nexport default function PostModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [posts, setPosts] = useState<Post[]>([])\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleGetPosts = async () => {\n    const { data } = await getPosts()\n\n    setPosts(data.posts)\n  }\n\n  useEffect(() => {\n    handleGetPosts()\n  }, [])\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <PostForm\n        handleGetPosts={handleGetPosts}\n      />\n      <PostModal />\n    </div>\n  );\n\n  return (\n    <div>\n      <Button\n\n        onClick={handleOpen}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        作成する\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}