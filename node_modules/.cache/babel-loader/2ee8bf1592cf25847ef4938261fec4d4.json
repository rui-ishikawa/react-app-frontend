{"ast":null,"code":"var _jsxFileName = \"/Users/ago/rails-react-app/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { execTest } from \"lib/api/test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [message, setMessage] = useState(\"\");\n\n  const handleExecTest = async () => {\n    const res = await execTest();\n\n    if (res.status === 200) {\n      setMessage(res.data.message);\n    }\n  };\n\n  useEffect(() => {\n    handleExecTest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ClLa+zvPL6vd0LAuHSvav3BaFBg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ago/rails-react-app/frontend/src/App.tsx"],"names":["React","useEffect","useState","execTest","App","message","setMessage","handleExecTest","res","status","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,cAAzB;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAS,EAAT,CAAtC;;AAEA,QAAMK,cAAc,GAAG,YAAY;AACjC,UAAMC,GAAG,GAAG,MAAML,QAAQ,EAA1B;;AAEA,QAAIK,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBH,MAAAA,UAAU,CAACE,GAAG,CAACE,IAAJ,CAASL,OAAV,CAAV;AACD;AACF,GAND;;AAQAJ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAlBD;;GAAMD,G;;KAAAA,G;AAoBN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nimport { execTest } from \"lib/api/test\"\n\nconst App: React.FC = () => {\n  const [message, setMessage] = useState<string>(\"\")\n\n  const handleExecTest = async () => {\n    const res = await execTest()\n\n    if (res.status === 200) {\n      setMessage(res.data.message)\n    }\n  }\n\n  useEffect(() => {\n    handleExecTest()\n  }, [])\n\n  return (\n    <h1>{message}</h1>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}