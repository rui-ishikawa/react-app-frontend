{"ast":null,"code":"var _jsxFileName = \"/Users/ago/rails-react-app/frontend/src/components/pages/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { AuthContext } from \"App\";\nimport AlertMessage from \"components/utils/AlertMessage\";\nimport { signUp } from \"lib/api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(6)\n  },\n  submitBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1,\n    textTransform: \"none\"\n  },\n  header: {\n    textAlign: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2),\n    maxWidth: 400\n  }\n})); // サインアップ用ページ\n\nconst SignUp = () => {\n  _s();\n\n  const classes = useStyles();\n  const histroy = useHistory();\n  const {\n    setIsSignedIn,\n    setCurrentUser\n  } = useContext(AuthContext);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [alertMessageOpen, setAlertMessageOpen] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    };\n\n    try {\n      const res = await signUp(data);\n      console.log(res);\n\n      if (res.status === 200) {\n        // アカウント作成と同時にサインインさせてしまう\n        // 本来であればメール確認などを挟むべきだが、今回はサンプルなので\n        Cookies.set(\"_access_token\", res.headers[\"access-token\"]);\n        Cookies.set(\"_client\", res.headers[\"client\"]);\n        Cookies.set(\"_uid\", res.headers[\"uid\"]);\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n        histroy.push(\"/\");\n        console.log(\"Signed in successfully!\");\n      } else {\n        setAlertMessageOpen(true);\n      }\n    } catch (err) {\n      console.log(err);\n      setAlertMessageOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: classes.header,\n          title: \"\\u30B5\\u30A4\\u30F3\\u30A2\\u30C3\\u30D7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u540D\\u524D\",\n            value: name,\n            margin: \"dense\",\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n            value: email,\n            margin: \"dense\",\n            onChange: event => setEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n            type: \"password\",\n            value: password,\n            margin: \"dense\",\n            autoComplete: \"current-password\",\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\uFF08\\u78BA\\u8A8D\\u7528\\uFF09\",\n            type: \"password\",\n            value: passwordConfirmation,\n            margin: \"dense\",\n            autoComplete: \"current-password\",\n            onChange: event => setPasswordConfirmation(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"outlined\",\n              color: \"primary\",\n              disabled: !name || !email || !password || !passwordConfirmation ? true : false,\n              className: classes.submitBtn,\n              onClick: handleSubmit,\n              children: \"\\u9001\\u4FE1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertMessage // エラーが発生した場合はアラートを表示\n    , {\n      open: alertMessageOpen,\n      setOpen: setAlertMessageOpen,\n      severity: \"error\",\n      message: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u304B\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u304C\\u9593\\u9055\\u3063\\u3066\\u3044\\u307E\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignUp, \"d+CiSnMp0E63Rsl5w4JByuoaW/k=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/ago/rails-react-app/frontend/src/components/pages/SignUp.tsx"],"names":["React","useState","useContext","useHistory","Cookies","makeStyles","TextField","Card","CardContent","CardHeader","Button","AuthContext","AlertMessage","signUp","useStyles","theme","container","marginTop","spacing","submitBtn","flexGrow","textTransform","header","textAlign","card","padding","maxWidth","SignUp","classes","histroy","setIsSignedIn","setCurrentUser","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","alertMessageOpen","setAlertMessageOpen","handleSubmit","e","preventDefault","data","res","console","log","status","set","headers","push","err","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport Cookies from \"js-cookie\"\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport Button from \"@material-ui/core/Button\"\n\nimport { AuthContext } from \"App\"\nimport AlertMessage from \"components/utils/AlertMessage\"\nimport { signUp } from \"lib/api/auth\"\nimport { SignUpData } from \"interfaces/index\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    marginTop: theme.spacing(6)\n  },\n  submitBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1,\n    textTransform: \"none\"\n  },\n  header: {\n    textAlign: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2),\n    maxWidth: 400\n  }\n}))\n\n// サインアップ用ページ\nconst SignUp: React.FC = () => {\n  const classes = useStyles()\n  const histroy = useHistory()\n\n  const { setIsSignedIn, setCurrentUser } = useContext(AuthContext)\n\n  const [name, setName] = useState<string>(\"\")\n  const [email, setEmail] = useState<string>(\"\")\n  const [password, setPassword] = useState<string>(\"\")\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>(\"\")\n  const [alertMessageOpen, setAlertMessageOpen] = useState<boolean>(false)\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n\n    const data: SignUpData = {\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    }\n\n    try {\n      const res = await signUp(data)\n      console.log(res)\n\n      if (res.status === 200) {\n        // アカウント作成と同時にサインインさせてしまう\n        // 本来であればメール確認などを挟むべきだが、今回はサンプルなので\n        Cookies.set(\"_access_token\", res.headers[\"access-token\"])\n        Cookies.set(\"_client\", res.headers[\"client\"])\n        Cookies.set(\"_uid\", res.headers[\"uid\"])\n\n        setIsSignedIn(true)\n        setCurrentUser(res.data.data)\n\n        histroy.push(\"/\")\n\n        console.log(\"Signed in successfully!\")\n      } else {\n        setAlertMessageOpen(true)\n      }\n    } catch (err) {\n      console.log(err)\n      setAlertMessageOpen(true)\n    }\n  }\n\n  return (\n    <>\n      <form noValidate autoComplete=\"off\">\n        <Card className={classes.card}>\n          <CardHeader className={classes.header} title=\"サインアップ\" />\n          <CardContent>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"名前\"\n              value={name}\n              margin=\"dense\"\n              onChange={event => setName(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"メールアドレス\"\n              value={email}\n              margin=\"dense\"\n              onChange={event => setEmail(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"パスワード\"\n              type=\"password\"\n              value={password}\n              margin=\"dense\"\n              autoComplete=\"current-password\"\n              onChange={event => setPassword(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"パスワード（確認用）\"\n              type=\"password\"\n              value={passwordConfirmation}\n              margin=\"dense\"\n              autoComplete=\"current-password\"\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n            <div style={{ textAlign: \"right\" }} >\n              <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={!name || !email || !password || !passwordConfirmation ? true : false}\n                className={classes.submitBtn}\n                onClick={handleSubmit}\n              >\n                送信\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </form>\n      <AlertMessage // エラーが発生した場合はアラートを表示\n        open={alertMessageOpen}\n        setOpen={setAlertMessageOpen}\n        severity=\"error\"\n        message=\"メールアドレスかパスワードが間違っています\"\n      />\n    </>\n  )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}