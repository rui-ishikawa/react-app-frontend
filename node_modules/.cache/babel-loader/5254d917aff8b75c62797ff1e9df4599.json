{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/pages/Users.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport AlertMessage from \"components/utils/AlertMessage\";\nimport { getUsers } from \"lib/api/users\";\nimport { getLikes, createLike } from \"lib/api/likes\";\nimport { AuthContext } from \"App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  }\n})); // ユーザー一覧ページ\n\nconst Users = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const classes = useStyles();\n  const initialUserState = {\n    id: 0,\n    uid: \"\",\n    provider: \"\",\n    email: \"\",\n    name: \"\",\n    image: {\n      url: \"\"\n    },\n    birthday: \"\",\n    profile: \"\",\n    allowPasswordChange: true\n  };\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState(initialUserState);\n  const [userDetailOpen, setUserDetailOpen] = useState(false);\n  const [likedUsers, setLikedUsers] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [alertMessageOpen, setAlertMessageOpen] = useState(false); // 生年月日から年齢を計算する 年齢 = floor((今日 - 誕生日) / 10000)\n\n  const userAge = () => {\n    const birthday = user.birthday.toString().replace(/-/g, \"\");\n    if (birthday.length !== 8) return;\n    const date = new Date();\n    const today = date.getFullYear() + (\"0\" + (date.getMonth() + 1)).slice(-2) + (\"0\" + date.getDate()).slice(-2);\n    return Math.floor((parseInt(today) - parseInt(birthday)) / 10000);\n  }; // フォームデータを作成\n\n\n  const createFormData = () => {\n    const formData = new FormData();\n    formData.append(\"fromUserId\", String(currentUser === null || currentUser === void 0 ? void 0 : currentUser.id));\n    formData.append(\"toUserId\", String(user.id));\n    return formData;\n  }; // いいね作成\n\n\n  const handleCreateLike = async user => {\n    const data = createFormData();\n\n    try {\n      const res = await createLike(data);\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setLikes([res.data.like, ...likes]);\n        setLikedUsers([user, ...likedUsers]);\n        console.log(res === null || res === void 0 ? void 0 : res.data.like);\n      } else {\n        console.log(\"Failed\");\n      }\n\n      if ((res === null || res === void 0 ? void 0 : res.data.isMatched) === true) {\n        setAlertMessageOpen(true);\n        setUserDetailOpen(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; // ユーザー一覧を取得\n\n\n  const handleGetUsers = async () => {\n    try {\n      const res = await getUsers();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setUsers(res === null || res === void 0 ? void 0 : res.data.users);\n      } else {\n        console.log(\"No users\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  }; // いいね一覧を取得\n\n\n  const handleGetLikes = async () => {\n    try {\n      const res = await getLikes();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setLikedUsers(res === null || res === void 0 ? void 0 : res.data.activeLikes);\n      } else {\n        console.log(\"No likes\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    handleGetUsers();\n    handleGetLikes();\n  }, []); // すでにいいねを押されているユーザーかどうかの判定\n\n  const isLikedUser = userId => {\n    return likedUsers === null || likedUsers === void 0 ? void 0 : likedUsers.some(likedUser => likedUser.id === userId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      animate: {\n        opacity: 1\n      },\n      initial: {\n        opacity: 0\n      },\n      exit: {\n        opacity: 0\n      },\n      transition: {\n        duration: 0.4\n      },\n      children: [!loading ? (users === null || users === void 0 ? void 0 : users.length) > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: users === null || users === void 0 ? void 0 : users.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setUser(user);\n              setUserDetailOpen(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                margin: \"0.5rem\",\n                cursor: \"pointer\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"avatar\",\n                src: user === null || user === void 0 ? void 0 : user.image.url,\n                className: classes.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"p\",\n                gutterBottom: true,\n                style: {\n                  marginTop: \"0.5rem\",\n                  textAlign: \"center\"\n                },\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: \"\\u307E\\u30601\\u4EBA\\u3082\\u30E6\\u30FC\\u30B6\\u30FC\\u304C\\u3044\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: userDetailOpen,\n        keepMounted: true,\n        onClose: () => setUserDetailOpen(false),\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"avatar\",\n                src: user === null || user === void 0 ? void 0 : user.image.url,\n                className: classes.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                marginTop: \"1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                component: \"p\",\n                gutterBottom: true,\n                style: {\n                  textAlign: \"center\"\n                },\n                children: [user.name, \" \", userAge(), \"\\u6B73\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"p\",\n                gutterBottom: true,\n                style: {\n                  marginTop: \"0.5rem\",\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u81EA\\u5DF1\\u7D39\\u4ECB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"p\",\n                color: \"textSecondary\",\n                style: {\n                  marginTop: \"0.5rem\"\n                },\n                children: user.profile ? user.profile : \"よろしくお願いします。\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => isLikedUser(user.id) ? void 0 : handleCreateLike(user),\n              color: \"secondary\",\n              startIcon: isLikedUser(user.id) ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 51\n              }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 70\n              }, this),\n              disabled: isLikedUser(user.id) ? true : false,\n              style: {\n                marginTop: \"1rem\",\n                marginBottom: \"1rem\"\n              },\n              children: isLikedUser(user.id) ? \"いいね済み\" : \"いいね\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                component: Link,\n                to: \"/\",\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \" \\u5B66\\u7FD2\\u3092\\u304F\\u308F\\u3057\\u304F\\u898B\\u308B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertMessage, {\n        open: alertMessageOpen,\n        setOpen: setAlertMessageOpen,\n        severity: \"success\",\n        message: \"\\u30DE\\u30C3\\u30C1\\u30F3\\u30B0\\u304C\\u6210\\u7ACB\\u3057\\u307E\\u3057\\u305F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Users, \"mHohhMHe/ejXyil2coCwzdjIPAo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/usr/src/app/src/components/pages/Users.tsx"],"names":["React","useState","useEffect","useContext","Link","motion","makeStyles","Grid","Typography","Dialog","DialogContent","Avatar","Button","Divider","FavoriteIcon","FavoriteBorderIcon","AlertMessage","getUsers","getLikes","createLike","AuthContext","useStyles","theme","avatar","width","spacing","height","Users","currentUser","classes","initialUserState","id","uid","provider","email","name","image","url","birthday","profile","allowPasswordChange","loading","setLoading","users","setUsers","user","setUser","userDetailOpen","setUserDetailOpen","likedUsers","setLikedUsers","likes","setLikes","alertMessageOpen","setAlertMessageOpen","userAge","toString","replace","length","date","Date","today","getFullYear","getMonth","slice","getDate","Math","floor","parseInt","createFormData","formData","FormData","append","String","handleCreateLike","data","res","console","log","status","like","isMatched","err","handleGetUsers","handleGetLikes","activeLikes","isLikedUser","userId","some","likedUser","opacity","duration","map","index","margin","cursor","marginTop","textAlign","fontWeight","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,SAASC,UAAT,QAAkC,0BAAlC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,eAArC;AAGA,SAASC,WAAT,QAA4B,KAA5B;;;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAmB;AAC9CC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAc,EAAd,CADD;AAENC,IAAAA,MAAM,EAAEJ,KAAK,CAACG,OAAN,CAAc,EAAd;AAFF;AADsC,CAAnB,CAAD,CAA5B,C,CAOA;;AACA,MAAME,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAkBzB,UAAU,CAACiB,WAAD,CAAlC;AACA,QAAMS,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAMS,gBAAsB,GAAG;AAC7BC,IAAAA,EAAE,EAAE,CADyB;AAE7BC,IAAAA,GAAG,EAAE,EAFwB;AAG7BC,IAAAA,QAAQ,EAAE,EAHmB;AAI7BC,IAAAA,KAAK,EAAE,EAJsB;AAK7BC,IAAAA,IAAI,EAAE,EALuB;AAM7BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE;AADA,KANsB;AAS7BC,IAAAA,QAAQ,EAAE,EATmB;AAU7BC,IAAAA,OAAO,EAAE,EAVoB;AAW7BC,IAAAA,mBAAmB,EAAE;AAXQ,GAA/B;AAcA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBzC,QAAQ,CAAU,IAAV,CAAtC;AACA,QAAM,CAAC0C,KAAD,EAAQC,QAAR,IAAoB3C,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAAC4C,IAAD,EAAOC,OAAP,IAAkB7C,QAAQ,CAAO6B,gBAAP,CAAhC;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsC/C,QAAQ,CAAU,KAAV,CAApD;AACA,QAAM,CAACgD,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAS,EAAT,CAA5C;AACA,QAAM,CAACkD,KAAD,EAAQC,QAAR,IAAoBnD,QAAQ,CAAa,EAAb,CAAlC;AACA,QAAM,CAACoD,gBAAD,EAAmBC,mBAAnB,IAA0CrD,QAAQ,CAAU,KAAV,CAAxD,CAxB4B,CA0B5B;;AACA,QAAMsD,OAAO,GAAG,MAAqB;AACnC,UAAMjB,QAAQ,GAAGO,IAAI,CAACP,QAAL,CAAckB,QAAd,GAAyBC,OAAzB,CAAiC,IAAjC,EAAuC,EAAvC,CAAjB;AACA,QAAInB,QAAQ,CAACoB,MAAT,KAAoB,CAAxB,EAA2B;AAE3B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACG,WAAL,KAAqB,CAAC,OAAOH,IAAI,CAACI,QAAL,KAAkB,CAAzB,CAAD,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAArB,GAA+D,CAAC,MAAML,IAAI,CAACM,OAAL,EAAP,EAAuBD,KAAvB,CAA6B,CAAC,CAA9B,CAA7E;AAEA,WAAOE,IAAI,CAACC,KAAL,CAAW,CAACC,QAAQ,CAACP,KAAD,CAAR,GAAkBO,QAAQ,CAAC9B,QAAD,CAA3B,IAAyC,KAApD,CAAP;AACD,GARD,CA3B4B,CAsC5B;;;AACA,QAAM+B,cAAc,GAAG,MAAoB;AACzC,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BC,MAAM,CAAC7C,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEG,EAAd,CAApC;AACAuC,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BC,MAAM,CAAC5B,IAAI,CAACd,EAAN,CAAlC;AAEA,WAAOuC,QAAP;AACD,GAPD,CAvC4B,CAgD5B;;;AACA,QAAMI,gBAAgB,GAAG,MAAO7B,IAAP,IAAsB;AAE7C,UAAM8B,IAAI,GAAGN,cAAc,EAA3B;;AAEA,QAAI;AACF,YAAMO,GAAG,GAAG,MAAMzD,UAAU,CAACwD,IAAD,CAA5B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,UAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,MAAL,MAAgB,GAApB,EAAyB;AACvB3B,QAAAA,QAAQ,CAAC,CAACwB,GAAG,CAACD,IAAJ,CAASK,IAAV,EAAgB,GAAG7B,KAAnB,CAAD,CAAR;AACAD,QAAAA,aAAa,CAAC,CAACL,IAAD,EAAO,GAAGI,UAAV,CAAD,CAAb;AAEA4B,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,aAAYA,GAAZ,uBAAYA,GAAG,CAAED,IAAL,CAAUK,IAAtB;AACD,OALD,MAKO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AAED,UAAI,CAAAF,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAED,IAAL,CAAUM,SAAV,MAAwB,IAA5B,EAAkC;AAChC3B,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAN,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,KAjBD,CAiBE,OAAOkC,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;AACF,GAxBD,CAjD4B,CA2E5B;;;AACA,QAAMC,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAMP,GAAG,GAAG,MAAM3D,QAAQ,EAA1B;AACA4D,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,UAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,MAAL,MAAgB,GAApB,EAAyB;AACvBnC,QAAAA,QAAQ,CAACgC,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAED,IAAL,CAAUhC,KAAX,CAAR;AACD,OAFD,MAEO;AACLkC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,KATD,CASE,OAAOI,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;;AAEDxC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAfD,CA5E4B,CA6F5B;;;AACA,QAAM0C,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAMR,GAAG,GAAG,MAAM1D,QAAQ,EAA1B;AACA2D,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,UAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEG,MAAL,MAAgB,GAApB,EAAyB;AACvB7B,QAAAA,aAAa,CAAC0B,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAED,IAAL,CAAUU,WAAX,CAAb;AACD,OAFD,MAEO;AACLR,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,KATD,CASE,OAAOI,GAAP,EAAY;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD;AACF,GAbD;;AAeAhF,EAAAA,SAAS,CAAC,MAAM;AACdiF,IAAAA,cAAc;AACdC,IAAAA,cAAc;AACf,GAHQ,EAGN,EAHM,CAAT,CA7G4B,CAkH5B;;AACA,QAAME,WAAW,GAAIC,MAAD,IAAyC;AAC3D,WAAOtC,UAAP,aAAOA,UAAP,uBAAOA,UAAU,CAAEuC,IAAZ,CAAkBC,SAAD,IAAqBA,SAAS,CAAC1D,EAAV,KAAiBwD,MAAvD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,MAAD,CAAQ,GAAR;AACE,MAAA,OAAO,EAAE;AAAEG,QAAAA,OAAO,EAAE;AAAX,OADX;AAEE,MAAA,OAAO,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAFX;AAGE,MAAA,IAAI,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAHR;AAIE,MAAA,UAAU,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAJd;AAAA,iBAQI,CAAClD,OAAD,GACE,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEe,MAAP,IAAgB,CAAhB,gBACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,cAAc,EAAC,QAA/B;AAAA,kBAEIf,KAFJ,aAEIA,KAFJ,uBAEIA,KAAK,CAAEiD,GAAP,CAAW,CAAC/C,IAAD,EAAagD,KAAb,KAA+B;AACxC,8BACE;AAAiB,YAAA,OAAO,EAAE,MAAM;AAC9B/C,cAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,cAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,aAHD;AAAA,mCAIE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,KAAK,EAAE;AAAE8C,gBAAAA,MAAM,EAAE,QAAV;AAAoBC,gBAAAA,MAAM,EAAE;AAA5B,eAAlB;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,GAAG,EAAC,QADN;AAEE,gBAAA,GAAG,EAAElD,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAET,KAAN,CAAYC,GAFnB;AAGE,gBAAA,SAAS,EAAER,OAAO,CAACN;AAHrB;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,UAAD;AACE,gBAAA,OAAO,EAAC,OADV;AAEE,gBAAA,SAAS,EAAC,GAFZ;AAGE,gBAAA,YAAY,MAHd;AAIE,gBAAA,KAAK,EAAE;AAAEyE,kBAAAA,SAAS,EAAE,QAAb;AAAuBC,kBAAAA,SAAS,EAAE;AAAlC,iBAJT;AAAA,0BAMGpD,IAAI,CAACV;AANR;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF,aAAU0D,KAAV;AAAA;AAAA;AAAA;AAAA,kBADF;AAsBD,SAvBD;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF,gBA8BE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,GADZ;AAEE,QAAA,OAAO,EAAC,OAFV;AAGE,QAAA,KAAK,EAAC,eAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BJ,gBAwCE,qCAhDN,eAmDE,QAAC,MAAD;AACE,QAAA,IAAI,EAAE9C,cADR;AAEE,QAAA,WAAW,MAFb;AAGE,QAAA,OAAO,EAAE,MAAMC,iBAAiB,CAAC,KAAD,CAHlC;AAAA,+BAKE,QAAC,aAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,QAA/B;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,GAAG,EAAC,QADN;AAEE,gBAAA,GAAG,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAET,KAAN,CAAYC,GAFnB;AAGE,gBAAA,SAAS,EAAER,OAAO,CAACN;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,QAA/B;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,KAAK,EAAE;AAAEyE,gBAAAA,SAAS,EAAE;AAAb,eAAlB;AAAA,sCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,OAApB;AAA4B,gBAAA,SAAS,EAAC,GAAtC;AAA0C,gBAAA,YAAY,MAAtD;AAAuD,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,SAAS,EAAE;AAAb,iBAA9D;AAAA,2BACGpD,IAAI,CAACV,IADR,OACeoB,OAAO,EADtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,UAAD;AACE,gBAAA,OAAO,EAAC,OADV;AAEE,gBAAA,SAAS,EAAC,GAFZ;AAGE,gBAAA,YAAY,MAHd;AAIE,gBAAA,KAAK,EAAE;AAAEyC,kBAAAA,SAAS,EAAE,QAAb;AAAuBE,kBAAAA,UAAU,EAAE;AAAnC,iBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAaE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,OAApB;AAA4B,gBAAA,SAAS,EAAC,GAAtC;AAA0C,gBAAA,KAAK,EAAC,eAAhD;AAAgE,gBAAA,KAAK,EAAE;AAAEF,kBAAAA,SAAS,EAAE;AAAb,iBAAvE;AAAA,0BACGnD,IAAI,CAACN,OAAL,GAAeM,IAAI,CAACN,OAApB,GAA8B;AADjC;AAAA;AAAA;AAAA;AAAA,sBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF,eA6BE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,QAA/B;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,UADV;AAEE,cAAA,OAAO,EAAE,MAAM+C,WAAW,CAACzC,IAAI,CAACd,EAAN,CAAX,GAAuB,KAAM,CAA7B,GAAkC2C,gBAAgB,CAAC7B,IAAD,CAFnE;AAGE,cAAA,KAAK,EAAC,WAHR;AAIE,cAAA,SAAS,EAAEyC,WAAW,CAACzC,IAAI,CAACd,EAAN,CAAX,gBAAuB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,sBAAvB,gBAA0C,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,sBAJvD;AAKE,cAAA,QAAQ,EAAEuD,WAAW,CAACzC,IAAI,CAACd,EAAN,CAAX,GAAuB,IAAvB,GAA8B,KAL1C;AAME,cAAA,KAAK,EAAE;AAAEiE,gBAAAA,SAAS,EAAE,MAAb;AAAqBG,gBAAAA,YAAY,EAAE;AAAnC,eANT;AAAA,wBAQGb,WAAW,CAACzC,IAAI,CAACd,EAAN,CAAX,GAAuB,OAAvB,GAAiC;AARpC;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,cAAc,EAAC,QAA/B;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,SAAS,EAAE3B,IADb;AAEE,gBAAA,EAAE,EAAC,GAFL;AAGE,gBAAA,OAAO,EAAC,UAHV;AAIE,gBAAA,KAAK,EAAC,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAnDF,eA4GE,QAAC,YAAD;AACE,QAAA,IAAI,EAAEiD,gBADR;AAEE,QAAA,OAAO,EAAEC,mBAFX;AAGE,QAAA,QAAQ,EAAC,SAHX;AAIE,QAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cA5GF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuHD,CA9OD;;GAAM3B,K;UAEYN,S;;;KAFZM,K;AAgPN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { motion } from \"framer-motion\";\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Grid, Typography } from \"@material-ui/core\"\n\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Button from \"@material-ui/core/Button\"\nimport Divider from \"@material-ui/core/Divider\"\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\nimport { LikeFormData } from \"interfaces/index\"\nimport AlertMessage from \"components/utils/AlertMessage\"\n\nimport { getUsers } from \"lib/api/users\"\nimport { getLikes, createLike } from \"lib/api/likes\"\nimport { User, LikeData } from \"interfaces/index\"\n\nimport { AuthContext } from \"App\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  }\n}))\n\n// ユーザー一覧ページ\nconst Users: React.FC = () => {\n  const { currentUser } = useContext(AuthContext)\n  const classes = useStyles()\n\n  const initialUserState: User = {\n    id: 0,\n    uid: \"\",\n    provider: \"\",\n    email: \"\",\n    name: \"\",\n    image: {\n      url: \"\"\n    },\n    birthday: \"\",\n    profile: \"\",\n    allowPasswordChange: true\n  }\n\n  const [loading, setLoading] = useState<boolean>(true)\n  const [users, setUsers] = useState<User[]>([])\n  const [user, setUser] = useState<User>(initialUserState)\n  const [userDetailOpen, setUserDetailOpen] = useState<boolean>(false)\n  const [likedUsers, setLikedUsers] = useState<User[]>([])\n  const [likes, setLikes] = useState<LikeData[]>([])\n  const [alertMessageOpen, setAlertMessageOpen] = useState<boolean>(false)\n\n  // 生年月日から年齢を計算する 年齢 = floor((今日 - 誕生日) / 10000)\n  const userAge = (): number | void => {\n    const birthday = user.birthday.toString().replace(/-/g, \"\")\n    if (birthday.length !== 8) return\n\n    const date = new Date()\n    const today = date.getFullYear() + (\"0\" + (date.getMonth() + 1)).slice(-2) + (\"0\" + date.getDate()).slice(-2)\n\n    return Math.floor((parseInt(today) - parseInt(birthday)) / 10000)\n  }\n\n\n  // フォームデータを作成\n  const createFormData = (): LikeFormData => {\n    const formData = new FormData()\n\n    formData.append(\"fromUserId\", String(currentUser?.id))\n    formData.append(\"toUserId\", String(user.id))\n\n    return formData\n  }\n\n  // いいね作成\n  const handleCreateLike = async (user: User) => {\n\n    const data = createFormData()\n\n    try {\n      const res = await createLike(data)\n      console.log(res)\n\n      if (res?.status === 200) {\n        setLikes([res.data.like, ...likes])\n        setLikedUsers([user, ...likedUsers])\n\n        console.log(res?.data.like)\n      } else {\n        console.log(\"Failed\")\n      }\n\n      if (res?.data.isMatched === true) {\n        setAlertMessageOpen(true)\n        setUserDetailOpen(false)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  // ユーザー一覧を取得\n  const handleGetUsers = async () => {\n    try {\n      const res = await getUsers()\n      console.log(res)\n\n      if (res?.status === 200) {\n        setUsers(res?.data.users)\n      } else {\n        console.log(\"No users\")\n      }\n    } catch (err) {\n      console.log(err)\n    }\n\n    setLoading(false)\n  }\n\n  // いいね一覧を取得\n  const handleGetLikes = async () => {\n    try {\n      const res = await getLikes()\n      console.log(res)\n\n      if (res?.status === 200) {\n        setLikedUsers(res?.data.activeLikes)\n      } else {\n        console.log(\"No likes\")\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    handleGetUsers()\n    handleGetLikes()\n  }, [])\n\n  // すでにいいねを押されているユーザーかどうかの判定\n  const isLikedUser = (userId: number | undefined): boolean => {\n    return likedUsers?.some((likedUser: User) => likedUser.id === userId)\n  }\n\n  return (\n    <>\n      <motion.div\n        animate={{ opacity: 1 }}\n        initial={{ opacity: 0 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.4 }}\n      >\n        {\n\n          !loading ? (\n            users?.length > 0 ? (\n              <Grid container justifyContent=\"center\">\n                {\n                  users?.map((user: User, index: number) => {\n                    return (\n                      <div key={index} onClick={() => {\n                        setUser(user)\n                        setUserDetailOpen(true)\n                      }}>\n                        <Grid item style={{ margin: \"0.5rem\", cursor: \"pointer\" }}>\n                          <Avatar\n                            alt=\"avatar\"\n                            src={user?.image.url}\n                            className={classes.avatar}\n                          />\n                          <Typography\n                            variant=\"body2\"\n                            component=\"p\"\n                            gutterBottom\n                            style={{ marginTop: \"0.5rem\", textAlign: \"center\" }}\n                          >\n                            {user.name}\n                          </Typography>\n                        </Grid>\n                      </div>\n                    )\n                  })\n                }\n              </Grid>\n            ) : (\n              <Typography\n                component=\"p\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                まだ1人もユーザーがいません。\n              </Typography>\n            )\n          ) : (\n            <></>\n          )\n        }\n        <Dialog\n          open={userDetailOpen}\n          keepMounted\n          onClose={() => setUserDetailOpen(false)}\n        >\n          <DialogContent>\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <Avatar\n                  alt=\"avatar\"\n                  src={user?.image.url}\n                  className={classes.avatar}\n                />\n              </Grid>\n            </Grid>\n            <Grid container justifyContent=\"center\">\n              <Grid item style={{ marginTop: \"1rem\" }}>\n                <Typography variant=\"body1\" component=\"p\" gutterBottom style={{ textAlign: \"center\" }}>\n                  {user.name} {userAge()}歳\n              </Typography>\n                <Divider />\n                <Typography\n                  variant=\"body2\"\n                  component=\"p\"\n                  gutterBottom\n                  style={{ marginTop: \"0.5rem\", fontWeight: \"bold\" }}\n                >\n                  自己紹介\n              </Typography>\n                <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\" style={{ marginTop: \"0.5rem\" }}>\n                  {user.profile ? user.profile : \"よろしくお願いします。\"}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container justifyContent=\"center\">\n              <Button\n                variant=\"outlined\"\n                onClick={() => isLikedUser(user.id) ? void (0) : handleCreateLike(user)}\n                color=\"secondary\"\n                startIcon={isLikedUser(user.id) ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                disabled={isLikedUser(user.id) ? true : false}\n                style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n              >\n                {isLikedUser(user.id) ? \"いいね済み\" : \"いいね\"}\n              </Button>\n              <Grid container justifyContent=\"center\">\n                <Button\n                  component={Link}\n                  to=\"/\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                > 学習をくわしく見る\n            </Button>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Dialog>\n        <AlertMessage\n          open={alertMessageOpen}\n          setOpen={setAlertMessageOpen}\n          severity=\"success\"\n          message=\"マッチングが成立しました!\"\n        />\n      </motion.div>\n    </>\n  )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}