{"ast":null,"code":"import applyCaseMiddleware from \"axios-case-converter\";\nimport axios from \"axios\"; // applyCaseMiddleware:\n// axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\n// ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\n\nconst options = {\n  ignoreHeaders: true\n};\nconst client = applyCaseMiddleware(axios.create({\n  baseURL: \"http://localhost:3001/api/v1\",\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n\n  }\n}), options); // サインイン前とサインイン後によって分ける必要があるため、clientを２種類用意して、headerを入れているパターンと入れてないないパターンの二つを用意する必要があると思います。\n// 通常tokenで認証する際は、リクエストのheaderに\n// 'Content-Type'\n// \"access-token\"\n// \"client\"\n// \"uid\"\n// を格納する必要があります\n\nexport default client;","map":{"version":3,"sources":["/usr/src/app/src/lib/api/client.ts"],"names":["applyCaseMiddleware","axios","options","ignoreHeaders","client","create","baseURL","headers"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,sBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AAEA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAE;AADD,CAAhB;AAIA,MAAMC,MAAM,GAAGJ,mBAAmB,CAACC,KAAK,CAACI,MAAN,CAAa;AAC9CC,EAAAA,OAAO,EAAE,8BADqC;AAE9CC,EAAAA,OAAO,EAAE;AACP,oBAAgB,qBADT,CAC+B;;AAD/B;AAFqC,CAAb,CAAD,EAK9BL,OAL8B,CAAlC,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeE,MAAf","sourcesContent":["import applyCaseMiddleware from \"axios-case-converter\"\nimport axios from \"axios\"\n\n// applyCaseMiddleware:\n// axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\n\n// ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\nconst options = {\n  ignoreHeaders: true\n}\n\nconst client = applyCaseMiddleware(axios.create({\n  baseURL: \"http://localhost:3001/api/v1\",\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n  }\n}), options)\n\n// サインイン前とサインイン後によって分ける必要があるため、clientを２種類用意して、headerを入れているパターンと入れてないないパターンの二つを用意する必要があると思います。\n// 通常tokenで認証する際は、リクエストのheaderに\n// 'Content-Type'\n// \"access-token\"\n// \"client\"\n// \"uid\"\n// を格納する必要があります\n\nexport default client\n"]},"metadata":{},"sourceType":"module"}