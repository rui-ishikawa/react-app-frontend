{"ast":null,"code":"// applyCaseMiddleware:\n// axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\nimport applyCaseMiddleware from \"axios-case-converter\";\nimport axios from \"axios\";\nlet client; // ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\n\nconst options = {\n  ignoreHeaders: true\n};\nexport default client = applyCaseMiddleware(axios.create({\n  baseURL: \"http://localhost:3001/api/v1\",\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n\n  }\n}), options);\nclient.interceptors.response.use(response => {\n  const data = response.data;\n  return { ...response.data,\n    data\n  };\n});","map":{"version":3,"sources":["/usr/src/app/src/lib/api/client.ts"],"names":["applyCaseMiddleware","axios","client","options","ignoreHeaders","create","baseURL","headers","interceptors","response","use","data"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,mBAAP,MAAgC,sBAAhC;AACA,OAAOC,KAAP,MAAoD,OAApD;AAEA,IAAIC,MAAJ,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAE;AADD,CAAhB;AAIA,eAAeF,MAAM,GAAGF,mBAAmB,CAACC,KAAK,CAACI,MAAN,CAAa;AACvDC,EAAAA,OAAO,EAAE,8BAD8C;AAEvDC,EAAAA,OAAO,EAAE;AACP,oBAAgB,qBADT,CAC+B;;AAD/B;AAF8C,CAAb,CAAD,EAKvCJ,OALuC,CAA3C;AAOAD,MAAM,CAACM,YAAP,CAAoBC,QAApB,CAA6BC,GAA7B,CACGD,QAAD,IAA4C;AAC1C,QAAME,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACA,SAAO,EAAE,GAAGF,QAAQ,CAACE,IAAd;AAAoBA,IAAAA;AAApB,GAAP;AACD,CAJH","sourcesContent":["// applyCaseMiddleware:\n// axiosで受け取ったレスポンスの値をスネークケース→キャメルケースに変換\n// または送信するリクエストの値をキャメルケース→スネークケースに変換してくれるライブラリ\nimport applyCaseMiddleware from \"axios-case-converter\"\nimport axios, { AxiosInstance, AxiosResponse } from \"axios\"\n\nlet client: AxiosInstance\n\n// ヘッダーに関してはケバブケースのままで良いので適用を無視するオプションを追加\nconst options = {\n  ignoreHeaders: true\n}\n\nexport default client = applyCaseMiddleware(axios.create({\n  baseURL: \"http://localhost:3001/api/v1\",\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // 画像ファイルを取り扱うのでform-dataで送信\n  }\n}), options)\n\nclient.interceptors.response.use(\n  (response: AxiosResponse): AxiosResponse => {\n    const data = response.data\n    return { ...response.data, data }\n  }\n)\n"]},"metadata":{},"sourceType":"module"}