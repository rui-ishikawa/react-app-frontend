{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/pages/Users.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport AlertMessage from \"components/utils/AlertMessage\";\nimport { getUsers } from \"lib/api/users\";\nimport { getLikes, createLike } from \"lib/api/likes\";\nimport { AuthContext } from \"App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  card: {\n    width: 480,\n    marginTop: \"2rem\",\n    transition: \"all 0.3s\",\n    \"&:hover\": {\n      boxShadow: \"1px 0px 20px -1px rgba(0,0,0,0.2), 0px 0px 20px 5px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n      transform: \"translateY(-3px)\"\n    }\n  },\n  delete: {\n    marginLeft: \"auto\"\n  }\n})); // ユーザー一覧ページ\n\nconst Users = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const classes = useStyles();\n  const initialUserState = {\n    id: 0,\n    uid: \"\",\n    provider: \"\",\n    email: \"\",\n    name: \"\",\n    image: {\n      url: \"\"\n    },\n    profile: \"\",\n    allowPasswordChange: true\n  };\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState(initialUserState);\n  const [userDetailOpen, setUserDetailOpen] = useState(false);\n  const [likedUsers, setLikedUsers] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [alertMessageOpen, setAlertMessageOpen] = useState(false); // フォームデータを作成\n\n  const createFormData = () => {\n    const formData = new FormData();\n    formData.append(\"fromUserId\", String(currentUser === null || currentUser === void 0 ? void 0 : currentUser.id));\n    formData.append(\"toUserId\", String(user.id));\n    return formData;\n  }; // いいね作成\n\n\n  const handleCreateLike = async user => {\n    const data = createFormData();\n\n    try {\n      const res = await createLike(data);\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setLikes([res.data.like, ...likes]);\n        setLikedUsers([user, ...likedUsers]);\n        console.log(res === null || res === void 0 ? void 0 : res.data.like);\n      } else {\n        console.log(\"Failed\");\n      }\n\n      if ((res === null || res === void 0 ? void 0 : res.data.isMatched) === true) {\n        setAlertMessageOpen(true);\n        setUserDetailOpen(false);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; // ユーザー一覧を取得\n\n\n  const handleGetUsers = async () => {\n    try {\n      const res = await getUsers();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setUsers(res === null || res === void 0 ? void 0 : res.data.users);\n      } else {\n        console.log(\"No users\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  }; // いいね一覧を取得\n\n\n  const handleGetLikes = async () => {\n    try {\n      const res = await getLikes();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setLikedUsers(res === null || res === void 0 ? void 0 : res.data.activeLikes);\n      } else {\n        console.log(\"No likes\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    handleGetUsers();\n    handleGetLikes();\n  }, []); // すでにいいねを押されているユーザーかどうかの判定\n\n  const isLikedUser = userId => {\n    return likedUsers === null || likedUsers === void 0 ? void 0 : likedUsers.some(likedUser => likedUser.id === userId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loading ? (users === null || users === void 0 ? void 0 : users.length) > 0 ? /*#__PURE__*/_jsxDEV(motion.div, {\n      animate: {\n        x: 0\n      },\n      initial: {\n        x: 800\n      },\n      exit: {\n        x: -800\n      },\n      transition: {\n        duration: 0.4\n      },\n      children: users === null || users === void 0 ? void 0 : users.map((user, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setUser(user);\n            setUserDetailOpen(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"avatar\",\n                src: user === null || user === void 0 ? void 0 : user.image.url,\n                className: classes.avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this),\n              titleTypographyProps: {\n                variant: 'h5'\n              },\n              title: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                component: \"p\",\n                gutterBottom: true,\n                style: {\n                  textAlign: \"start\"\n                },\n                children: user.profile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 23\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      variant: \"body2\",\n      color: \"textSecondary\",\n      children: \"\\u307E\\u30601\\u4EBA\\u3082\\u30E6\\u30FC\\u30B6\\u30FC\\u304C\\u3044\\u307E\\u305B\\u3093\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: userDetailOpen,\n      keepMounted: true,\n      onClose: () => setUserDetailOpen(false),\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"avatar\",\n              src: user === null || user === void 0 ? void 0 : user.image.url,\n              className: classes.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              marginTop: \"1rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              component: \"p\",\n              gutterBottom: true,\n              style: {\n                textAlign: \"center\"\n              },\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              component: \"p\",\n              gutterBottom: true,\n              style: {\n                marginTop: \"0.5rem\",\n                fontWeight: \"bold\"\n              },\n              children: \"\\u81EA\\u5DF1\\u7D39\\u4ECB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              component: \"p\",\n              color: \"textSecondary\",\n              style: {\n                marginTop: \"0.5rem\"\n              },\n              children: user.profile ? user.profile : \"よろしくお願いします。\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => isLikedUser(user.id) ? void 0 : handleCreateLike(user),\n            color: \"secondary\",\n            startIcon: isLikedUser(user.id) ? /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 68\n            }, this),\n            disabled: isLikedUser(user.id) ? true : false,\n            style: {\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\"\n            },\n            children: isLikedUser(user.id) ? \"いいね済み\" : \"いいね\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: \"/\",\n              variant: \"outlined\",\n              color: \"secondary\",\n              children: \" \\u5B66\\u7FD2\\u3092\\u304F\\u308F\\u3057\\u304F\\u898B\\u308B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertMessage, {\n      open: alertMessageOpen,\n      setOpen: setAlertMessageOpen,\n      severity: \"success\",\n      message: \"\\u30DE\\u30C3\\u30C1\\u30F3\\u30B0\\u304C\\u6210\\u7ACB\\u3057\\u307E\\u3057\\u305F!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Users, \"mHohhMHe/ejXyil2coCwzdjIPAo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/usr/src/app/src/components/pages/Users.tsx"],"names":["React","useState","useEffect","useContext","Link","motion","makeStyles","Grid","Typography","Card","CardHeader","CardContent","Dialog","DialogContent","Avatar","Button","Divider","FavoriteIcon","FavoriteBorderIcon","AlertMessage","getUsers","getLikes","createLike","AuthContext","useStyles","theme","avatar","width","spacing","height","card","marginTop","transition","boxShadow","transform","delete","marginLeft","Users","currentUser","classes","initialUserState","id","uid","provider","email","name","image","url","profile","allowPasswordChange","loading","setLoading","users","setUsers","user","setUser","userDetailOpen","setUserDetailOpen","likedUsers","setLikedUsers","likes","setLikes","alertMessageOpen","setAlertMessageOpen","createFormData","formData","FormData","append","String","handleCreateLike","data","res","console","log","status","like","isMatched","err","handleGetUsers","handleGetLikes","activeLikes","isLikedUser","userId","some","likedUser","length","x","duration","map","index","variant","textAlign","fontWeight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { motion } from \"framer-motion\";\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Grid, Typography } from \"@material-ui/core\"\nimport Card from \"@material-ui/core/Card\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport CardContent from \"@material-ui/core/CardContent\"\n\n\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Button from \"@material-ui/core/Button\"\nimport Divider from \"@material-ui/core/Divider\"\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\nimport { LikeFormData } from \"interfaces/index\"\nimport AlertMessage from \"components/utils/AlertMessage\"\n\nimport { getUsers } from \"lib/api/users\"\nimport { getLikes, createLike } from \"lib/api/likes\"\nimport { User, LikeData } from \"interfaces/index\"\n\nimport { AuthContext } from \"App\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10)\n  },\n  card: {\n    width: 480,\n    marginTop: \"2rem\",\n    transition: \"all 0.3s\",\n    \"&:hover\": {\n      boxShadow:\n        \"1px 0px 20px -1px rgba(0,0,0,0.2), 0px 0px 20px 5px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\",\n      transform: \"translateY(-3px)\"\n    }\n  },\n  delete: {\n    marginLeft: \"auto\"\n  }\n}))\n\n// ユーザー一覧ページ\nconst Users: React.FC = () => {\n  const { currentUser } = useContext(AuthContext)\n  const classes = useStyles()\n\n  const initialUserState: User = {\n    id: 0,\n    uid: \"\",\n    provider: \"\",\n    email: \"\",\n    name: \"\",\n    image: {\n      url: \"\"\n    },\n    profile: \"\",\n    allowPasswordChange: true\n  }\n\n  const [loading, setLoading] = useState<boolean>(true)\n  const [users, setUsers] = useState<User[]>([])\n  const [user, setUser] = useState<User>(initialUserState)\n  const [userDetailOpen, setUserDetailOpen] = useState<boolean>(false)\n  const [likedUsers, setLikedUsers] = useState<User[]>([])\n  const [likes, setLikes] = useState<LikeData[]>([])\n  const [alertMessageOpen, setAlertMessageOpen] = useState<boolean>(false)\n\n  // フォームデータを作成\n  const createFormData = (): LikeFormData => {\n    const formData = new FormData()\n\n    formData.append(\"fromUserId\", String(currentUser?.id))\n    formData.append(\"toUserId\", String(user.id))\n\n    return formData\n  }\n\n  // いいね作成\n  const handleCreateLike = async (user: User) => {\n\n    const data = createFormData()\n\n    try {\n      const res = await createLike(data)\n      console.log(res)\n\n      if (res?.status === 200) {\n        setLikes([res.data.like, ...likes])\n        setLikedUsers([user, ...likedUsers])\n\n        console.log(res?.data.like)\n      } else {\n        console.log(\"Failed\")\n      }\n\n      if (res?.data.isMatched === true) {\n        setAlertMessageOpen(true)\n        setUserDetailOpen(false)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  // ユーザー一覧を取得\n  const handleGetUsers = async () => {\n    try {\n      const res = await getUsers()\n      console.log(res)\n\n      if (res?.status === 200) {\n        setUsers(res?.data.users)\n      } else {\n        console.log(\"No users\")\n      }\n    } catch (err) {\n      console.log(err)\n    }\n\n    setLoading(false)\n  }\n\n  // いいね一覧を取得\n  const handleGetLikes = async () => {\n    try {\n      const res = await getLikes()\n      console.log(res)\n\n      if (res?.status === 200) {\n        setLikedUsers(res?.data.activeLikes)\n      } else {\n        console.log(\"No likes\")\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    handleGetUsers()\n    handleGetLikes()\n  }, [])\n\n  // すでにいいねを押されているユーザーかどうかの判定\n  const isLikedUser = (userId: number | undefined): boolean => {\n    return likedUsers?.some((likedUser: User) => likedUser.id === userId)\n  }\n\n  return (\n    <>\n      {\n        !loading ? (\n          users?.length > 0 ? (\n            <motion.div\n              animate={{ x: 0 }}\n              initial={{ x: 800 }}\n              exit={{ x: -800 }}\n              transition={{ duration: 0.4 }}>\n              {\n                users?.map((user: User, index: number) => {\n                  return (\n                    <div key={index} onClick={() => {\n                      setUser(user)\n                      setUserDetailOpen(true)\n                    }}>\n                      <Card className={classes.card}>\n                        <CardHeader\n                          avatar={\n                            <Avatar\n                              alt=\"avatar\"\n                              src={user?.image.url}\n                              className={classes.avatar}\n                            />\n                          }\n                          titleTypographyProps={{ variant: 'h5' }}\n                          title={user.name}\n                        />\n                        {/* <Typography\n                            variant=\"body2\"\n                            component=\"p\"\n                            gutterBottom\n                            style={{ marginTop: \"0.5rem\", textAlign: \"center\" }}\n                          >\n                            {user.name}\n                          </Typography> */}\n                        <CardContent>\n                          <Typography\n                            variant=\"body1\"\n                            component=\"p\"\n                            gutterBottom\n                            style={{ textAlign: \"start\" }}\n                          >\n                            {user.profile}\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  )\n                })\n              }\n            </motion.div>\n          ) : (\n            <Typography\n              component=\"p\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              まだ1人もユーザーがいません。\n            </Typography>\n          )\n        ) : (\n          <></>\n        )\n      }\n      <Dialog\n        open={userDetailOpen}\n        keepMounted\n        onClose={() => setUserDetailOpen(false)}\n      >\n        <DialogContent>\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <Avatar\n                alt=\"avatar\"\n                src={user?.image.url}\n                className={classes.avatar}\n              />\n            </Grid>\n          </Grid>\n          <Grid container justifyContent=\"center\">\n            <Grid item style={{ marginTop: \"1rem\" }}>\n              <Typography variant=\"body1\" component=\"p\" gutterBottom style={{ textAlign: \"center\" }}>\n                {user.name}\n              </Typography>\n              <Divider />\n              <Typography\n                variant=\"body2\"\n                component=\"p\"\n                gutterBottom\n                style={{ marginTop: \"0.5rem\", fontWeight: \"bold\" }}\n              >\n                自己紹介\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" color=\"textSecondary\" style={{ marginTop: \"0.5rem\" }}>\n                {user.profile ? user.profile : \"よろしくお願いします。\"}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container justifyContent=\"center\">\n            <Button\n              variant=\"outlined\"\n              onClick={() => isLikedUser(user.id) ? void (0) : handleCreateLike(user)}\n              color=\"secondary\"\n              startIcon={isLikedUser(user.id) ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n              disabled={isLikedUser(user.id) ? true : false}\n              style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n            >\n              {isLikedUser(user.id) ? \"いいね済み\" : \"いいね\"}\n            </Button>\n            <Grid container justifyContent=\"center\">\n              <Button\n                component={Link}\n                to=\"/\"\n                variant=\"outlined\"\n                color=\"secondary\"\n              > 学習をくわしく見る\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <AlertMessage\n        open={alertMessageOpen}\n        setOpen={setAlertMessageOpen}\n        severity=\"success\"\n        message=\"マッチングが成立しました!\"\n      />\n    </>\n  )\n}\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}