{"ast":null,"code":"var _jsxFileName = \"/Users/ago/rails-react-app/frontend/src/components/post/PostForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { makeStyles } from \"@material-ui/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { createPost } from \"../../lib/api/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 320\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  box: {\n    margin: \"2rem 0 4rem\",\n    width: 320\n  },\n  preview: {\n    width: \"100%\"\n  }\n}));\nconst Input = styled(\"input\")({\n  display: \"none\"\n});\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1\n};\n\nconst PostForm = ({\n  handleGetPosts\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState();\n  const [preview, setPreview] = useState(\"\");\n  const uploadImage = useCallback(e => {\n    const file = e.target.files[0];\n    setImage(file);\n  }, []);\n  const previewImage = useCallback(e => {\n    const file = e.target.files[0];\n    setPreview(window.URL.createObjectURL(file));\n  }, []);\n\n  const createFormData = () => {\n    const formData = new FormData();\n    formData.append(\"content\", content);\n    if (image) formData.append(\"image\", image);\n    return formData;\n  };\n\n  const handleCreatePost = async e => {\n    e.preventDefault();\n    const data = createFormData();\n    await createPost(data).then(() => {\n      setContent(\"\");\n      setPreview(\"\");\n      setImage(undefined);\n      handleGetPosts();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: handleCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Hello World\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        rows: \"4\",\n        value: content,\n        onChange: e => {\n          setContent(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputFileBtn,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"icon-button-file\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            accept: \"image/*\",\n            id: \"icon-button-file\",\n            type: \"file\",\n            onChange: e => {\n              uploadImage(e);\n              previewImage(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            component: \"span\",\n            children: /*#__PURE__*/_jsxDEV(PhotoCameraIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitBtn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          color: \"inherit\",\n          disabled: !content || content.length > 140,\n          className: classes.submitBtn,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), preview ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: { ...borderStyles,\n        borderRadius: 1,\n        borderColor: \"grey.400\"\n      },\n      className: classes.box,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: () => setPreview(\"\"),\n        children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"preview img\",\n        className: classes.preview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(PostForm, \"njLWkjI9vM+DlYjQHVsJQAOGZJ8=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/ago/rails-react-app/frontend/src/components/post/PostForm.tsx"],"names":["React","useCallback","useState","experimentalStyled","styled","makeStyles","TextField","Button","Box","IconButton","PhotoCameraIcon","CancelIcon","createPost","useStyles","theme","form","display","flexWrap","width","inputFileBtn","marginTop","submitBtn","marginLeft","box","margin","preview","Input","borderStyles","bgcolor","border","PostForm","handleGetPosts","classes","content","setContent","image","setImage","setPreview","uploadImage","e","file","target","files","previewImage","window","URL","createObjectURL","createFormData","formData","FormData","append","handleCreatePost","preventDefault","data","then","undefined","value","length","borderRadius","borderColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\"\n\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Theme } from \"@material-ui/core/styles\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\n\nimport { createPost } from \"../../lib/api/posts\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 320\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  box: {\n    margin: \"2rem 0 4rem\",\n    width: 320\n  },\n  preview: {\n    width: \"100%\"\n  }\n}))\n\nconst Input = styled(\"input\")({\n  display: \"none\"\n})\n\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1,\n}\n\ninterface PostFormProps {\n  handleGetPosts: Function\n}\n\nconst PostForm = ({ handleGetPosts }: PostFormProps) => {\n  const classes = useStyles()\n\n  const [content, setContent] = useState<string>(\"\")\n  const [image, setImage] = useState<File>()\n  const [preview, setPreview] = useState<string>(\"\")\n\n  const uploadImage = useCallback((e) => {\n    const file = e.target.files[0]\n    setImage(file)\n  }, [])\n\n  const previewImage = useCallback((e) => {\n    const file = e.target.files[0]\n    setPreview(window.URL.createObjectURL(file))\n  }, [])\n\n  const createFormData = (): FormData => {\n    const formData = new FormData()\n\n    formData.append(\"content\", content)\n    if (image) formData.append(\"image\", image)\n\n    return formData\n  }\n\n  const handleCreatePost = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    const data = createFormData()\n\n    await createPost(data)\n      .then(() => {\n        setContent(\"\")\n        setPreview(\"\")\n        setImage(undefined)\n        handleGetPosts()\n      })\n  }\n\n  return (\n    <>\n      <form className={classes.form} noValidate onSubmit={handleCreatePost}>\n        <TextField\n          placeholder=\"Hello World\"\n          variant=\"outlined\"\n          multiline\n          fullWidth\n          rows=\"4\"\n          value={content}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setContent(e.target.value)\n          }}\n        />\n        <div className={classes.inputFileBtn}>\n          <label htmlFor=\"icon-button-file\">\n            <Input\n              accept=\"image/*\"\n              id=\"icon-button-file\"\n              type=\"file\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                uploadImage(e)\n                previewImage(e)\n              }}\n            />\n            <IconButton color=\"inherit\" component=\"span\">\n              <PhotoCameraIcon />\n            </IconButton>\n          </label>\n        </div>\n        <div className={classes.submitBtn}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"inherit\"\n            disabled={!content || content.length > 140}\n            className={classes.submitBtn}\n          >\n            Post\n          </Button>\n        </div>\n      </form>\n      { preview ?\n        <Box\n          sx={{ ...borderStyles, borderRadius: 1, borderColor: \"grey.400\" }}\n          className={classes.box}\n        >\n          <IconButton\n            color=\"inherit\"\n            onClick={() => setPreview(\"\")}\n          >\n            <CancelIcon />\n          </IconButton>\n          <img\n            src={preview}\n            alt=\"preview img\"\n            className={classes.preview}\n          />\n        </Box> : null\n      }\n    </>\n  )\n}\n\nexport default PostForm\n"]},"metadata":{},"sourceType":"module"}