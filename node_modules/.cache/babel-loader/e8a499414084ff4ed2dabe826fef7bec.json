{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/post/PostComment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { styled } from '@material-ui/core/styles';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { createPost } from \"../../lib/api/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 480\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  box: {\n    margin: \"2rem 0 4rem\",\n    width: 320\n  },\n  preview: {\n    width: \"100%\"\n  }\n}));\nconst Input = styled(\"input\")({\n  display: \"none\"\n});\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1\n};\n\nconst PostComment = ({\n  handleGetPosts\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [content, setContent] = useState(\"\"); // FormData形式でデータを作成\n\n  const createFormData = () => {\n    const formData = new FormData();\n    formData.append(\"content\", content);\n    return formData;\n  };\n\n  const handleCreatePost = async e => {\n    e.preventDefault();\n    const data = createFormData();\n    await createPost(data).then(() => {\n      setContent(\"\");\n      handleGetPosts();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      onSubmit: handleCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Let's Share!\",\n        variant: \"outlined\",\n        multiline: true,\n        fullWidth: true,\n        rows: \"4\",\n        value: content,\n        onChange: e => {\n          setContent(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitBtn,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          color: \"inherit\",\n          disabled: !content || content.length > 140,\n          className: classes.submitBtn,\n          children: \"\\u30B3\\u30E1\\u30F3\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), \": null\"]\n  }, void 0, true);\n};\n\n_s(PostComment, \"coh6fANEdbzPrvY0d9PaxJ11xkU=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostComment;\nexport default PostComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"sources":["/usr/src/app/src/components/post/PostComment.tsx"],"names":["React","useState","styled","makeStyles","TextField","Button","createPost","useStyles","theme","form","display","flexWrap","width","inputFileBtn","marginTop","submitBtn","marginLeft","box","margin","preview","Input","borderStyles","bgcolor","border","PostComment","handleGetPosts","classes","content","setContent","createFormData","formData","FormData","append","handleCreatePost","e","preventDefault","data","then","target","value","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\"\n\nimport { styled } from '@material-ui/core/styles';\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\n\nimport { createPost } from \"../../lib/api/posts\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 480\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  box: {\n    margin: \"2rem 0 4rem\",\n    width: 320\n  },\n  preview: {\n    width: \"100%\"\n  }\n}))\n\nconst Input = styled(\"input\")({\n  display: \"none\"\n})\n\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1,\n}\n\ninterface PostFormProps {\n  handleGetPosts: Function\n}\n\nconst PostComment = ({ handleGetPosts }: PostFormProps) => {\n  const classes = useStyles()\n\n  const [content, setContent] = useState<string>(\"\")\n\n\n\n  // FormData形式でデータを作成\n  const createFormData = (): FormData => {\n    const formData = new FormData()\n\n    formData.append(\"content\", content)\n    return formData\n  }\n\n  const handleCreatePost = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    const data = createFormData()\n\n    await createPost(data)\n      .then(() => {\n        setContent(\"\")\n        handleGetPosts()\n      })\n  }\n\n  return (\n    <>\n      <form className={classes.form} noValidate onSubmit={handleCreatePost}>\n        <TextField\n          placeholder=\"Let's Share!\"\n          variant=\"outlined\"\n          multiline\n          fullWidth\n          rows=\"4\"\n          value={content}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setContent(e.target.value)\n          }}\n        />\n        <div className={classes.submitBtn}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"inherit\"\n            disabled={!content || content.length > 140}\n            className={classes.submitBtn}\n          >\n            コメント\n          </Button>\n        </div>\n      </form>\n      : null\n\n    </>\n  )\n}\n\nexport default PostComment\n"]},"metadata":{},"sourceType":"module"}