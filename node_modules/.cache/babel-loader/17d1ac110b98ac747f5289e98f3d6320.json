{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/pages/UserPages.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getChatRoom } from \"lib/api/chat_rooms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    margin: \"0 auto\"\n  },\n  formWrapper: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 340\n  },\n  textInputWrapper: {\n    width: \"100%\"\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\n// 個別のチャットルームページ\nconst UserPages = props => {\n  _s();\n\n  const classes = useStyles();\n  const id = parseInt(props.match.params.id); // URLからidを取得\n\n  console.log(id);\n  const [loading, setLoading] = useState(true);\n  const [otherUser, setOtherUser] = useState();\n  const [messages, setMeesages] = useState([]);\n  useEffect(() => {\n    async function handleGetChatRoom() {\n      try {\n        const res = await getChatRoom(id);\n        console.log(res);\n\n        if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n          setOtherUser(res === null || res === void 0 ? void 0 : res.data.otherUser);\n          setMeesages(res === null || res === void 0 ? void 0 : res.data.messages);\n        } else {\n          console.log(\"No other user\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      setLoading(false);\n    }\n\n    handleGetChatRoom();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading ? /*#__PURE__*/_jsxDEV(motion.div, {\n      animate: {\n        x: 0\n      },\n      initial: {\n        x: 800\n      },\n      exit: {\n        x: -800\n      },\n      transition: {\n        duration: 0.4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(UserPages, \"n4I/BsSSPDemzWSS5BB8jV984eY=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserPages;\nexport default UserPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPages\");","map":{"version":3,"sources":["/usr/src/app/src/components/pages/UserPages.tsx"],"names":["React","useEffect","useState","motion","makeStyles","getChatRoom","useStyles","theme","avatar","width","spacing","height","margin","formWrapper","padding","display","alignItems","textInputWrapper","button","marginLeft","UserPages","props","classes","id","parseInt","match","params","console","log","loading","setLoading","otherUser","setOtherUser","messages","setMeesages","handleGetChatRoom","res","status","data","err","x","duration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { motion } from \"framer-motion\";\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\n\nimport { getChatRoom } from \"lib/api/chat_rooms\"\nimport { User, MessageData } from \"interfaces/index\"\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    margin: \"0 auto\"\n  },\n  formWrapper: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 340\n  },\n  textInputWrapper: {\n    width: \"100%\"\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  }\n}))\n\ntype UserPagesProps = RouteComponentProps<{ id: string }>\n\n// 個別のチャットルームページ\nconst UserPages: React.FC<UserPagesProps> = (props) => {\n  const classes = useStyles()\n\n  const id = parseInt(props.match.params.id) // URLからidを取得\n  console.log(id)\n\n  const [loading, setLoading] = useState<boolean>(true)\n  const [otherUser, setOtherUser] = useState<User>()\n  const [messages, setMeesages] = useState<MessageData[]>([])\n\n\n\n  useEffect(() => {\n    async function handleGetChatRoom() {\n      try {\n        const res = await getChatRoom(id)\n        console.log(res)\n\n        if (res?.status === 200) {\n          setOtherUser(res?.data.otherUser)\n          setMeesages(res?.data.messages)\n        } else {\n          console.log(\"No other user\")\n        }\n      } catch (err) {\n        console.log(err)\n      }\n\n      setLoading(false)\n    }\n    handleGetChatRoom()\n  }, [id])\n\n\n\n\n\n  return (\n    <>\n      {\n        !loading ? (\n          <motion.div\n            animate={{ x: 0 }}\n            initial={{ x: 800 }}\n            exit={{ x: -800 }}\n            transition={{ duration: 0.4 }}>\n          </motion.div >\n        ) : (\n          <></>\n        )\n      }\n    </>\n  )\n}\n\nexport default UserPages\n"]},"metadata":{},"sourceType":"module"}