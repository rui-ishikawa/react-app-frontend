{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/post/PostComment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { styled } from '@material-ui/core/styles';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { createComment } from \"../../lib/api/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 480\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  formWrapper: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  textInputWrapper: {\n    width: \"80%\"\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  }\n}));\nconst Input = styled(\"input\")({\n  display: \"none\"\n});\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1\n};\n\nconst PostComment = props => {\n  _s();\n\n  const classes = useStyles();\n  const [content, setContent] = useState(\"\"); // FormData形式でデータを作成\n\n  const createFormData = () => {\n    const formData = new FormData();\n    formData.append(\"content\", content);\n    return formData;\n  };\n\n  const handleCreateComment = async e => {\n    e.preventDefault();\n    const data = createFormData();\n    await createComment(data).then(() => {\n      setContent(\"\");\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.formWrapper,\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleCreateComment,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        multiline: true,\n        value: content,\n        onChange: e => setContent(e.target.value),\n        className: classes.textInputWrapper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: !content ? true : false,\n        onClick: handleCreateComment,\n        className: classes.button,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PostComment, \"coh6fANEdbzPrvY0d9PaxJ11xkU=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostComment;\nexport default PostComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostComment\");","map":{"version":3,"sources":["/usr/src/app/src/components/post/PostComment.tsx"],"names":["React","useState","styled","makeStyles","TextField","Button","SendIcon","createComment","useStyles","theme","form","display","flexWrap","width","inputFileBtn","marginTop","submitBtn","marginLeft","formWrapper","padding","alignItems","textInputWrapper","button","spacing","Input","borderStyles","bgcolor","border","PostComment","props","classes","content","setContent","createFormData","formData","FormData","append","handleCreateComment","e","preventDefault","data","then","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\n\nimport { styled } from '@material-ui/core/styles';\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport SendIcon from \"@material-ui/icons/Send\"\n\nimport { createComment } from \"../../lib/api/comments\"\nimport { CommentFormData } from \"interfaces/index\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 480\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  formWrapper: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  textInputWrapper: {\n    width: \"80%\"\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  }\n}))\n\nconst Input = styled(\"input\")({\n  display: \"none\"\n})\n\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1,\n}\n\ntype CommentProps = { content?: string }\n\nconst PostComment: React.FC<CommentProps> = (props) => {\n  const classes = useStyles()\n\n  const [content, setContent] = useState<string>(\"\")\n\n\n\n  // FormData形式でデータを作成\n  const createFormData = (): CommentFormData => {\n    const formData = new FormData()\n\n    formData.append(\"content\", content)\n    return formData\n  }\n\n  const handleCreateComment = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    const data = createFormData()\n\n    await createComment(data)\n      .then(() => {\n        setContent(\"\")\n        console.log(data)\n      })\n  }\n\n  return (\n    <>\n      {/* <form className={classes.form} noValidate onSubmit={handleCreatePost}>\n        <TextField\n          placeholder=\"Let's Share!\"\n          variant=\"outlined\"\n          multiline\n          fullWidth\n          rows=\"4\"\n          value={content}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setContent(e.target.value)\n          }}\n        />\n        <div className={classes.submitBtn}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"inherit\"\n            disabled={!content || content.length > 140}\n            className={classes.submitBtn}\n          >\n            コメント\n          </Button>\n        </div>\n      </form> */}\n      <form className={classes.formWrapper} noValidate autoComplete=\"off\" onSubmit={handleCreateComment}>\n        <TextField\n          required\n          multiline\n          value={content}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setContent(e.target.value)}\n          className={classes.textInputWrapper}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!content ? true : false}\n          onClick={handleCreateComment}\n          className={classes.button}\n        >\n          <SendIcon />\n        </Button>\n      </form>\n    </>\n  )\n}\n\nexport default PostComment\n"]},"metadata":{},"sourceType":"module"}