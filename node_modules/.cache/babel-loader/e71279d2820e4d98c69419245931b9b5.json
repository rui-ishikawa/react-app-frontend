{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport CommonLayout from \"components/layouts/CommonLayout\";\nimport Home from \"components/pages/Home\";\nimport ChatRooms from \"components/pages/ChatRooms\";\nimport ChatRoom from \"components/pages/ChatRoom\";\nimport Users from \"components/pages/Users\";\nimport Studies from \"components/pages/Studies\";\nimport SignUp from \"components/pages/SignUp\";\nimport { Root } from \"components/pages/Root\";\nimport SignIn from \"components/pages/SignIn\";\nimport NotFound from \"components/pages/NotFound\";\nimport PostList from \"./components/post/PostList\";\nimport { getCurrentUser } from \"lib/api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// グローバルで扱う変数・関数（contextで管理）\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState();\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser();\n      console.log(res);\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setIsSignedIn(true);\n        setCurrentUser(res === null || res === void 0 ? void 0 : res.data.currentUser);\n      } else {\n        console.log(\"No current user\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    handleGetCurrentUser();\n  }, [setCurrentUser]); // ユーザーが認証済みかどうかでルーティングを決定\n  // 未認証だった場合は「/signin」ページに促す\n\n  const Private = ({\n    children\n  }) => {\n    if (!loading) {\n      if (isSignedIn) {\n        return children;\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  const location = useLocation();\n  const [_, rootPath] = location.pathname.split(\"/\");\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        loading,\n        isSignedIn,\n        setIsSignedIn,\n        currentUser,\n        setCurrentUser\n      },\n      children: /*#__PURE__*/_jsxDEV(CommonLayout, {\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          exitBeforeEnter: true,\n          initial: true,\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            location: location,\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              component: Root\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/signup\",\n              component: SignUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/signin\",\n              component: SignIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Private, {\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                location: location,\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: \"/home\",\n                  component: Home\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: \"/users\",\n                  component: Users\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: \"/studies\",\n                  component: Studies\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: \"/chat_rooms\",\n                  component: ChatRooms\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/chatroom/:id\",\n                  component: ChatRoom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  exact: true,\n                  path: \"/posts\",\n                  component: PostList\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  component: NotFound\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)]\n              }, rootPath, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, rootPath, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"R7ULlURBu3MvU9LpOmmBZE++fAc=\", false, function () {\n  return [useLocation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/usr/src/app/src/App.tsx"],"names":["React","useState","useEffect","createContext","BrowserRouter","Router","Switch","Route","Redirect","useLocation","AnimatePresence","CommonLayout","Home","ChatRooms","ChatRoom","Users","Studies","SignUp","Root","SignIn","NotFound","PostList","getCurrentUser","AuthContext","App","loading","setLoading","isSignedIn","setIsSignedIn","currentUser","setCurrentUser","handleGetCurrentUser","res","console","log","status","data","err","Private","children","location","_","rootPath","pathname","split"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\"\nimport { BrowserRouter as Router, Switch, Route, Redirect, useLocation } from \"react-router-dom\"\nimport { AnimatePresence } from \"framer-motion\";\n\nimport CommonLayout from \"components/layouts/CommonLayout\"\nimport Home from \"components/pages/Home\"\nimport ChatRooms from \"components/pages/ChatRooms\"\nimport ChatRoom from \"components/pages/ChatRoom\"\nimport Users from \"components/pages/Users\"\nimport Studies from \"components/pages/Studies\"\nimport SignUp from \"components/pages/SignUp\"\nimport { Root } from \"components/pages/Root\"\nimport SignIn from \"components/pages/SignIn\"\nimport NotFound from \"components/pages/NotFound\"\nimport PostList from \"./components/post/PostList\"\n\nimport { getCurrentUser } from \"lib/api/auth\"\nimport { User } from \"interfaces/index\"\n\n\n// グローバルで扱う変数・関数（contextで管理）\nexport const AuthContext = createContext({} as {\n  loading: boolean\n  isSignedIn: boolean\n  setIsSignedIn: React.Dispatch<React.SetStateAction<boolean>>\n  currentUser: User | undefined\n  setCurrentUser: React.Dispatch<React.SetStateAction<User | undefined>>\n})\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(true)\n  const [isSignedIn, setIsSignedIn] = useState<boolean>(false)\n  const [currentUser, setCurrentUser] = useState<User | undefined>()\n\n  const handleGetCurrentUser = async () => {\n    try {\n      const res = await getCurrentUser()\n      console.log(res)\n\n      if (res?.status === 200) {\n        setIsSignedIn(true)\n        setCurrentUser(res?.data.currentUser)\n      } else {\n        console.log(\"No current user\")\n      }\n    } catch (err) {\n      console.log(err)\n    }\n\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    handleGetCurrentUser()\n  }, [setCurrentUser])\n\n  // ユーザーが認証済みかどうかでルーティングを決定\n  // 未認証だった場合は「/signin」ページに促す\n  const Private = ({ children }: { children: React.ReactElement }) => {\n    if (!loading) {\n      if (isSignedIn) {\n        return children\n      } else {\n        return <Redirect to=\"/signin\" />\n      }\n    } else {\n      return <></>\n    }\n  }\n\n  const location = useLocation();\n  const [_, rootPath] = location.pathname.split(\"/\");\n\n  return (\n    <Router>\n      <AuthContext.Provider value={{ loading, isSignedIn, setIsSignedIn, currentUser, setCurrentUser }}>\n        <CommonLayout>\n          <AnimatePresence exitBeforeEnter initial={true}>\n            <Switch location={location} key={rootPath}>\n              <Route exact path=\"/\" component={Root} />\n              <Route exact path=\"/signup\" component={SignUp} />\n              <Route exact path=\"/signin\" component={SignIn} />\n              <Private>\n                <Switch location={location} key={rootPath}>\n                  <Route exact path=\"/home\" component={Home} />\n                  <Route exact path=\"/users\" component={Users} />\n                  <Route exact path=\"/studies\" component={Studies} />\n                  <Route exact path=\"/chat_rooms\" component={ChatRooms} />\n                  <Route path=\"/chatroom/:id\" component={ChatRoom} />\n                  <Route exact path=\"/posts\" component={PostList} />\n                  <Route component={NotFound} />\n                </Switch>\n              </Private>\n            </Switch>\n          </AnimatePresence>\n        </CommonLayout>\n      </AuthContext.Provider>\n    </Router>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}