[{"/usr/src/app/src/index.tsx":"1","/usr/src/app/src/App.tsx":"2","/usr/src/app/src/components/post/PostList.tsx":"3","/usr/src/app/src/lib/api/auth.ts":"4","/usr/src/app/src/lib/api/posts.ts":"5","/usr/src/app/src/components/post/PostForm.tsx":"6","/usr/src/app/src/components/post/PostItem.tsx":"7","/usr/src/app/src/components/pages/Root.tsx":"8","/usr/src/app/src/components/pages/ChatRoom.tsx":"9","/usr/src/app/src/components/pages/Users.tsx":"10","/usr/src/app/src/components/pages/SignIn.tsx":"11","/usr/src/app/src/components/pages/Home.tsx":"12","/usr/src/app/src/components/layouts/CommonLayout.tsx":"13","/usr/src/app/src/components/pages/NotFound.tsx":"14","/usr/src/app/src/components/pages/ChatRooms.tsx":"15","/usr/src/app/src/components/pages/SignUp.tsx":"16","/usr/src/app/src/lib/api/client.ts":"17","/usr/src/app/src/lib/api/chat_rooms.ts":"18","/usr/src/app/src/lib/api/messages.ts":"19","/usr/src/app/src/lib/api/users.ts":"20","/usr/src/app/src/lib/api/likes.ts":"21","/usr/src/app/src/components/layouts/Header.tsx":"22","/usr/src/app/src/components/Card/Card.tsx":"23","/usr/src/app/src/components/MainImage/MainImage.tsx":"24","/usr/src/app/src/components/utils/AlertMessage.tsx":"25","/usr/src/app/src/components/post/PostCard.tsx":"26","/usr/src/app/src/components/pages/About.tsx":"27","/usr/src/app/src/components/post/PostModal.tsx":"28","/usr/src/app/src/components/post/UserModal.tsx":"29","/usr/src/app/src/components/post/PostComment.tsx":"30","/usr/src/app/src/lib/api/comments.ts":"31","/usr/src/app/src/config.js":"32"},{"size":214,"mtime":1627514037809,"results":"33","hashOfConfig":"34"},{"size":3678,"mtime":1633983926958,"results":"35","hashOfConfig":"34"},{"size":1476,"mtime":1633855955866,"results":"36","hashOfConfig":"34"},{"size":1125,"mtime":1629760976795,"results":"37","hashOfConfig":"34"},{"size":803,"mtime":1633984042480,"results":"38","hashOfConfig":"34"},{"size":3837,"mtime":1633984176465,"results":"39","hashOfConfig":"34"},{"size":3073,"mtime":1633983732066,"results":"40","hashOfConfig":"34"},{"size":2761,"mtime":1631564701722,"results":"41","hashOfConfig":"34"},{"size":6578,"mtime":1633129712374,"results":"42","hashOfConfig":"34"},{"size":7927,"mtime":1633983893808,"results":"43","hashOfConfig":"34"},{"size":4626,"mtime":1628893833018,"results":"44","hashOfConfig":"34"},{"size":10085,"mtime":1631276417787,"results":"45","hashOfConfig":"34"},{"size":791,"mtime":1631276417786,"results":"46","hashOfConfig":"34"},{"size":198,"mtime":1627552797652,"results":"47","hashOfConfig":"34"},{"size":3944,"mtime":1631276417787,"results":"48","hashOfConfig":"34"},{"size":9007,"mtime":1630615221755,"results":"49","hashOfConfig":"34"},{"size":886,"mtime":1632613895599,"results":"50","hashOfConfig":"34"},{"size":683,"mtime":1627552797656,"results":"51","hashOfConfig":"34"},{"size":217,"mtime":1632686921899,"results":"52","hashOfConfig":"34"},{"size":978,"mtime":1630613699944,"results":"53","hashOfConfig":"34"},{"size":523,"mtime":1628893833023,"results":"54","hashOfConfig":"34"},{"size":3541,"mtime":1633179857476,"results":"55","hashOfConfig":"34"},{"size":1060,"mtime":1628551230170,"results":"56","hashOfConfig":"34"},{"size":388,"mtime":1631276417786,"results":"57","hashOfConfig":"34"},{"size":1155,"mtime":1627521381194,"results":"58","hashOfConfig":"34"},{"size":1324,"mtime":1631567381376,"results":"59","hashOfConfig":"34"},{"size":1738,"mtime":1631276417787,"results":"60","hashOfConfig":"34"},{"size":1908,"mtime":1633984198677,"results":"61","hashOfConfig":"34"},{"size":5597,"mtime":1633983634280,"results":"62","hashOfConfig":"34"},{"size":4105,"mtime":1633640743302,"results":"63","hashOfConfig":"34"},{"size":470,"mtime":1633524447603,"results":"64","hashOfConfig":"34"},{"size":75,"mtime":1632950377100,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"15i068l",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"/usr/src/app/src/index.tsx",[],["133","134"],"/usr/src/app/src/App.tsx",[],"/usr/src/app/src/components/post/PostList.tsx",[],"/usr/src/app/src/lib/api/auth.ts",[],"/usr/src/app/src/lib/api/posts.ts",[],"/usr/src/app/src/components/post/PostForm.tsx",[],"/usr/src/app/src/components/post/PostItem.tsx",[],"/usr/src/app/src/components/pages/Root.tsx",[],"/usr/src/app/src/components/pages/ChatRoom.tsx",[],"/usr/src/app/src/components/pages/Users.tsx",[],"/usr/src/app/src/components/pages/SignIn.tsx",[],"/usr/src/app/src/components/pages/Home.tsx",[],"/usr/src/app/src/components/layouts/CommonLayout.tsx",[],"/usr/src/app/src/components/pages/NotFound.tsx",[],"/usr/src/app/src/components/pages/ChatRooms.tsx",[],"/usr/src/app/src/components/pages/SignUp.tsx",[],"/usr/src/app/src/lib/api/client.ts",[],"/usr/src/app/src/lib/api/chat_rooms.ts",[],"/usr/src/app/src/lib/api/messages.ts",[],"/usr/src/app/src/lib/api/users.ts",[],"/usr/src/app/src/lib/api/likes.ts",[],"/usr/src/app/src/components/layouts/Header.tsx",[],"/usr/src/app/src/components/Card/Card.tsx",[],"/usr/src/app/src/components/MainImage/MainImage.tsx",[],"/usr/src/app/src/components/utils/AlertMessage.tsx",[],"/usr/src/app/src/components/post/PostCard.tsx",[],"/usr/src/app/src/components/pages/About.tsx",[],"/usr/src/app/src/components/post/PostModal.tsx",["135"],"/usr/src/app/src/components/post/UserModal.tsx",[],"/usr/src/app/src/components/post/PostComment.tsx",["136","137"],"import React, { useState, useEffect } from \"react\"\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport SendIcon from \"@material-ui/icons/Send\"\nimport { Grid, Typography } from \"@material-ui/core\"\n\nimport { createComment, getComments } from \"../../lib/api/comments\"\nimport { CommentFormData } from \"interfaces/index\"\nimport { CommentData } from \"interfaces/index\"\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 480\n  },\n  inputFileBtn: {\n    marginTop: \"10px\"\n  },\n  submitBtn: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\"\n  },\n  formWrapper: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  textInputWrapper: {\n    width: \"80%\"\n  },\n  button: {\n    marginLeft: theme.spacing(1)\n  }\n}))\n\nconst borderStyles = {\n  bgcolor: \"background.paper\",\n  border: 1,\n}\n\ntype CommentProps = { content?: string, key: string }\n\nconst PostComment: React.FC<CommentProps> = (props) => {\n  const classes = useStyles()\n\n  const [content, setContent] = useState<string>(\"\")\n  const [key, setKey] = useState<string>(\"\")\n  const [comments, setComments] = useState<CommentData[]>([])\n  const [loading, setLoading] = useState<boolean>(true)\n\n  const createFormData = (): CommentFormData => {\n    const formData = new FormData()\n\n    formData.append(\"content\", content)\n    formData.append(\"post_id\", key)\n\n    return formData\n  }\n\n  useEffect(() => {\n    async function handleGetComments() {\n      try {\n        const res = await getComments()\n        console.log(res)\n\n        if (res?.status === 200) {\n          // setOtherUser(res?.data.otherUser)\n          setComments(res?.data.comments)\n        } else {\n          console.log(\"No comments\")\n        }\n      } catch (err) {\n        console.log(err)\n      }\n\n      setLoading(false)\n    }\n    handleGetComments()\n  }, [])\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n\n    const data = createFormData()\n\n    try {\n      const res = await createComment(data)\n      if (res.status === 200) {\n        setComments([...comments, res.data.comment])\n        setContent(\"\")\n        setKey(\"\")\n        console.log(res)\n      }\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  // Railsから渡ってくるtimestamp（ISO8601）をdatetimeに変換\n  const iso8601ToDateTime = (iso8601: string) => {\n    const date = new Date(Date.parse(iso8601))\n    const year = date.getFullYear()\n    const month = date.getMonth() + 1\n    const day = date.getDate()\n    const hour = date.getHours()\n    const minute = date.getMinutes()\n\n    return year + \"年\" + month + \"月\" + day + \"日\" + hour + \"時\" + minute + \"分\"\n  }\n\n\n  return (\n    <>\n      {\n        comments.map((comment: CommentData, index: number) => {\n          return (\n            <Grid key={index} container justifyContent=\"flex-start\" >\n              <Grid item>\n\n                <Typography variant=\"body1\" component=\"p\">\n                  {comment?.content}\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  component=\"p\"\n                  color=\"textSecondary\"\n                >\n                  {iso8601ToDateTime(comment.createdAt?.toString() || \"100000000\")}\n                </Typography>\n              </Grid>\n            </Grid>\n          )\n        })\n      }\n      <form className={classes.formWrapper} noValidate autoComplete=\"off\" >\n        <TextField\n          required\n          multiline\n          value={content}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => setContent(e.target.value)}\n          className={classes.textInputWrapper}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!content ? true : false}\n          onClick={handleSubmit}\n          className={classes.button}\n        >\n          <SendIcon />\n        </Button>\n      </form>\n    </>\n  )\n}\n\nexport default PostComment\n","/usr/src/app/src/lib/api/comments.ts",[],"/usr/src/app/src/config.js",[],["138","139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":42,"column":10,"nodeType":"146","messageId":"147","endLine":42,"endColumn":15},{"ruleId":"144","severity":1,"message":"148","line":40,"column":7,"nodeType":"146","messageId":"147","endLine":40,"endColumn":19},{"ruleId":"144","severity":1,"message":"149","line":53,"column":10,"nodeType":"146","messageId":"147","endLine":53,"endColumn":17},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","'borderStyles' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]